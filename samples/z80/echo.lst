          0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
          0 :                            cpu     z80
          0 :                            include "z80.inc"
(1)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :                    ;;; z80
(1)       0 :                    ;;; FLAGS Register
(1)       0 : =80                F_SIGN:         equ     10000000B ; set to 1 if negative
(1)       0 : =40                F_ZERO:         equ     01000000B ; set to 1 if zero
(1)       0 : =10                F_HALF_CARRY:   equ     00010000B ; set to 1 if carry from bit-3
(1)       0 : =4                 F_PARITY:       equ     00000100B ; set to 1 if even parity
(1)       0 : =4                 F_OVERFLOW:     equ     00000100B ; set to 1 if overflow
(1)       0 : =2                 F_NBCD:         equ     00000010B ; set to 1 if subtraction
(1)       0 : =1                 F_CARRY:        equ     00000001B ; set to 1 if carry
(1)       0 :                    ;;; Interrupt origin
(1)       0 : =0                 ORG_RESET:      equ     0000H   ; RESET
(1)       0 : =0                 ORG_RST00:      equ     0000H   ; RST 00H
(1)       0 : =8                 ORG_RST08:      equ     0008H   ; RST 08H
(1)       0 : =10                ORG_RST10:      equ     0010H   ; RST 10H
(1)       0 : =18                ORG_RST18:      equ     0018H   ; RST 18H
(1)       0 : =20                ORG_RST20:      equ     0020H   ; RST 20H
(1)       0 : =28                ORG_RST28:      equ     0028H   ; RST 28H
(1)       0 : =30                ORG_RST30:      equ     0030H   ; RST 30H
(1)       0 : =38                ORG_RST38:      equ     0038H   ; RST 38H
(1)       0 : =38                ORG_INT:        equ     0038H   ; Mode 1 INT
(1)       0 : =66                ORG_NMI:        equ     0066H   ; NMI
          0 :
          0 :                    ;;; i8251 Universal Synchronous/Asynchronous Receiver/Transmitter
          0 : =0                 USART:  equ     00H
          0 : =0                 USARTD: equ     USART+0         ; Data register
          0 : =1                 USARTS: equ     USART+1         ; Status register
          0 : =1                 USARTC: equ     USART+1         ; Control register
          0 :                            include "i8251.inc"
(1)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :
(1)       0 :                    ;;; i8251 USART device emulator.
(1)       0 : =6                 MODE_STOP_gp:   equ     6
(1)       0 : =C0                MODE_STOP_gm:   equ     11000000B
(1)       0 : =40                MODE_STOP1_gc:  equ     (1 << MODE_STOP_gp)
(1)       0 : =80                MODE_STOP15_gc: equ     (2 << MODE_STOP_gp)
(1)       0 : =C0                MODE_STOP2_gc:  equ     (3 << MODE_STOP_gp)
(1)       0 : =20                MODE_EVEN_bm:   equ     00100000B
(1)       0 : =10                MODE_PARITY_bm: equ     00010000B
(1)       0 : =2                 MODE_LEN_gp:    equ     2
(1)       0 : =C                 MODE_LEN_gm:    equ     00001100B
(1)       0 : =0                 MODE_LEN5_gc:   equ     (0 << MODE_LEN_gp)
(1)       0 : =4                 MODE_LEN6_gc:   equ     (1 << MODE_LEN_gp)
(1)       0 : =8                 MODE_LEN7_gc:   equ     (2 << MODE_LEN_gp)
(1)       0 : =C                 MODE_LEN8_gc:   equ     (3 << MODE_LEN_gp)
(1)       0 : =0                 MODE_BAUD_gp:   equ     0
(1)       0 : =3                 MODE_BAUD_gm:   equ     00000011B
(1)       0 : =1                 MODE_BAUD_X1:   equ     (1 << MODE_BAUD_gp)
(1)       0 : =2                 MODE_BAUD_X16:  equ (2 << MODE_BAUD_gp)
(1)       0 : =3                 MODE_BAUD_X64:  equ (3 << MODE_BAUD_gp)
(1)       0 :                    ;;; Bit Definition of command register
(1)       0 : =80                CMD_EH_bm:      equ     10000000B   ; Enter hunt mode
(1)       0 : =40                CMD_IR_bm:      equ     01000000B   ; Internal Reset
(1)       0 : =20                CMD_RTS_bm:     equ     00100000B   ; Request To Send
(1)       0 : =10                CMD_ER_bm:      equ     00010000B   ; Error Reset
(1)       0 : =8                 CMD_SBRK_bm:    equ     00001000B   ; Send Break
(1)       0 : =4                 CMD_RxEN_bm:    equ     00000100B   ; Receive Enable
(1)       0 : =2                 CMD_DTR_bm:     equ     00000010B   ; Data Terminal Ready
(1)       0 : =1                 CMD_TxEN_bm:    equ     00000001B   ; Transmit enable
(1)       0 :
(1)       0 :                    ;;; Bit definition of status register
(1)       0 : =80                ST_DSR_bm:      equ     10000000B   ; Data Set Ready
(1)       0 : =40                ST_BRK_bm:      equ     01000000B   ; BREAK detected
(1)       0 : =20                ST_FE_bm:       equ     00100000B   ; Framing Error
(1)       0 : =10                ST_OE_bm:       equ     00010000B   ; Iverrun Error
(1)       0 : =8                 ST_PE_bm:       equ     00001000B   ; Parity Error
(1)       0 : =2                 ST_TxEMPTY_bp:  equ     2           ; Transmitter empty
(1)       0 : =1                 ST_RxRDY_bp:    equ     1           ; Receiver ready
(1)       0 : =0                 ST_TxRDY_bp:    equ     0           ; Transmitter ready
          0 :                    ;;; Async 1stop 8data x16
          0 : =4E                ASYNC_MODE:     equ     MODE_STOP1_gc|MODE_LEN8_gc|MODE_BAUD_X16
          0 :                    ;;; RTS/DTR, error reset, Rx enable, Tx enable
          0 : =37                RX_EN_TX_EN:    equ     CMD_RTS_bm|CMD_DTR_bm|CMD_ER_bm|CMD_RxEN_bm|CMD_TxEN_bm
          0 :
       1000 :                            org     1000H
       1000 : =1000              stack:  equ     $
       1000 :
          0 :                            org     ORG_RESET
          0 : C3 00 01                   jp      init
          3 :
        100 :                            org     0100H
        100 :                    init:
        100 : 31 00 10                   ld      SP, stack
        103 :
        103 :                    init_usart:
        103 : AF                         xor     A               ; clear A
        104 : D3 01                      out     (USARTC), A
        106 : D3 01                      out     (USARTC), A
        108 : D3 01                      out     (USARTC), A     ; safest way to sync mode
        10A : 3E 40                      ld      A, CMD_IR_bm
        10C : D3 01                      out     (USARTC), A     ; reset
        10E : 00                         nop
        10F : 00                         nop
        110 : 3E 4E                      ld      A, ASYNC_MODE
        112 : D3 01                      out     (USARTC), A
        114 : 00                         nop
        115 : 00                         nop
        116 : 3E 37                      ld      A, RX_EN_TX_EN
        118 : D3 01                      out     (USARTC), A
        11A :
        11A :                    receive_loop:
        11A : DB 01                      in      A, (USARTS)
        11C : CB 4F                      bit     ST_RxRDY_bp, A
        11E : 28 FA                      jr      Z, receive_loop
        120 :                    receive_data:
        120 : DB 00                      in      A, (USARTD)
        122 : 47                         ld      B, A
        123 : B7                         or      A, A
        124 : 28 11                      jr      Z, halt_to_system
        126 :                    transmit_loop:
        126 : DB 01                      in      A, (USARTS)
        128 : CB 47                      bit     ST_TxRDY_bp, A
        12A : 28 FA                      jr      Z, transmit_loop
        12C :                    transmit_data:
        12C : 78                         ld      A, B
        12D : D3 00                      out     (USARTD), A
        12F : FE 0D                      cp      0DH
        131 : 20 E7                      jr      NZ, receive_loop
        133 : 06 0A                      ld      B, 0AH
        135 : 18 EF                      jr      transmit_loop
        137 :                    halt_to_system:
        137 : 76                         halt
        138 :
        138 : 08                         ex      af, af'
        139 : D9                         exx
        13A :
        13A : C7                         rst     00h
        13B : F5                         push    af
        13C : C5                         push    bc
        13D : D5                         push    de
        13E : E5                         push    hl
        13F : DD E5                      push    ix
        141 : FD E5                      push    iy
        143 : ED 57                      ld      a, i
        145 : 77                         ld      (hl), a
        146 : ED 5F                      ld      a, r
        148 : 77                         ld      (hl), a
        149 :
        149 : 3E 00                      ld      a, 0
        14B : ED 4F                      ld      r, a
        14D : 3E 00                      ld      a, 0
        14F : ED 47                      ld      i, a
        151 : F1                         pop     af
        152 : C1                         pop     bc
        153 : D1                         pop     de
        154 : E1                         pop     hl
        155 : DD E1                      pop     ix
        157 : FD E1                      pop     iy
        159 : 31 34 12                   ld      sp, 1234h
        15C : C3 78 56                   jp      5678h
