          0 :                            include "mc146805e.inc"
(1)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :                            include "mc6805.inc"
(2)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(2)       0 :                    ;;; MC6805
(2)       0 :                            cpu     6805
(2)       0 :                    ;;; Condition Code Register (CC)
(2)       0 : =1                 CC_CARRY      equ  %00000001   ; set to 1 if carry occurred
(2)       0 : =2                 CC_ZERO       equ  %00000010   ; set to 1 if result is zero
(2)       0 : =4                 CC_NEGATIVE   equ  %00000100   ; set to 1 if result is negative
(2)       0 : =8                 CC_IRQ        equ  %00001000   ; if 1, IRQ is masked
(2)       0 : =10                CC_HALF_CARRY equ  %00010000   ; if 1, decimal carry from least digit occurred
(2)       0 :
(2)       0 :                    ;;; Internal Register Area
(2)       0 : =0                 PORTA:  equ     $00          ; $00: Port A Data Register
(2)       0 : =1                 PORTB:  equ     $01          ; $01: Port B Data Register
(2)       0 : =4                 DDRA:   equ     $04          ; $04: Port A Data Direction Register
(2)       0 : =5                 DDRB:   equ     $05          ; $05: Port B Data Direction Register
(2)       0 : =8                 TDR:    equ     $08          ; $08: Timer Data Register
(2)       0 : =9                 TCR:    equ     $09          ; $09: Timer Control Register
(2)       0 :
(2)       0 :                    ;;; Port 2 Data Register
(2)       0 :
(2)       0 :                    ;;; Timer Control Register
(2)       0 : =7                 TCR_SCALER_gm:  equ     %00000111 ; Prescaler
(2)       0 : =0                 TCR_DIV1_gc:    equ     %00000000 ; - 1/1
(2)       0 : =1                 TCR_DIV2_gc:    equ     %00000001 ; - 1/2
(2)       0 : =2                 TCR_DIV4_gc:    equ     %00000010 ; - 1/4
(2)       0 : =3                 TCR_DIV8_gc:    equ     %00000011 ; - 1/8
(2)       0 : =4                 TCR_DIV16_gc:   equ     %00000100 ; - 1/16
(2)       0 : =5                 TCR_DIV32_gc:   equ     %00000101 ; - 1/32
(2)       0 : =6                 TCR_DIV64_gc:   equ     %00000110 ; - 1/64
(2)       0 : =7                 TCR_DIV128_gc:  equ     %00000111 ; - 1/128
(2)       0 : =18                TCR_CS_gm:      equ     %00011000 ; Timer clock source
(2)       0 : =0                 TCR_AS_gc:      equ     %00000000 ; - Internal Clock (AS)
(2)       0 : =8                 TCR_AS_AND_gc:  equ     %00001000 ; - Internal Clock (AS) AND TIMER input
(2)       0 : =10                TCR_DISABLE_gc: equ     %00010000 ; - Timer input is disabled
(2)       0 : =18                TCR_TIMER_gc:   equ     %00011000 ; - TIMER input
(2)       0 : =20                TCR_TOF_bm:     equ     %00100000 ; Timer Overflow Flag
(2)       0 : =40                TCR_IM_bm:      equ     %01000000 ; Timer interrupt mask
(2)       0 : =80                TCR_IF_bm:      equ     %10000000 ; Timer interrupt request flag
(1)       0 :                    ;;; MC146805E
(1)       0 :                            cpu     146805
(1)       0 :                    ;;; Vector
(1)       0 : =1FFA              VEC_IRQ:        equ     $1FFA   ; $1FFA: Maskable Interrupt Request
(1)       0 : =1FFC              VEC_SWI:        equ     $1FFC   ; $1FFC: Software Interrupt
(1)       0 : =1FFE              VEC_RESET:      equ     $1FFE   ; $1FFE: Reset
(1)       0 :
(1)       0 : =10                RAM_START:      equ     $0010   ; Internal RAM $0010-$007F
(1)       0 : =7F                STACK_TOP:      equ     $007F   ; Stack $007F->$0010
          0 :                            cpu     6805
          0 :                            option  pc-bits,16
          0 :
          0 :                    ;;; MC6850 Asynchronous Communication Interface Adapter
          0 : =17F8              ACIA:   equ     $17F8
          0 :                            include "mc6850.inc"
(1)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :
(1)       0 :                    ;;; MC6850
(1)       0 :                    ;;; Asynchronous Communication Interface Adapter
(1)       0 :
(1)       0 :                    ;;; Control register
(1)       0 : =17F8              ACIA_control:   equ     ACIA+0
(1)       0 :                            ;; Counter Divider Select Bits
(1)       0 : =3                 CDS_gm:         equ     %11    ; Group mask
(1)       0 : =0                 CDS_DIV1_gc:    equ     %00000000 ; /1
(1)       0 : =1                 CDS_DIV16_gc:   equ     %00000001 ; /16
(1)       0 : =2                 CDS_DIV64_gc:   equ     %00000010 ; /64
(1)       0 : =3                 CDS_RESET_gc:   equ     %00000011 ; Master Reset
(1)       0 :                            ;; Word Select Bits
(1)       0 : =1C                WSB_gm:         equ     %00011100 ; Group mask
(1)       0 : =0                 WSB_7E2_gc:     equ     %00000000 ; 7 Bits + Even Parity + 2 Stop Bits
(1)       0 : =4                 WSB_7O2_gc:     equ     %00000100 ; 7 bits + Odd Parity  + 2 Stop Bits
(1)       0 : =8                 WSB_7E1_gc:     equ     %00001000 ; 7 bits + Even Parity + 1 Stop Bits
(1)       0 : =C                 WSB_7O1_gc:     equ     %00001100 ; 7 bits + Odd Parity  + 1 Stop Bits
(1)       0 : =10                WSB_8N2_gc:     equ     %00010000 ; 8 bits + No Parity   + 2 Stop Bits
(1)       0 : =14                WSB_8N1_gc:     equ     %00010100 ; 8 bits + No Parity   + 1 Stop Bits
(1)       0 : =18                WSB_8E1_gc:     equ     %00011000 ; 8 bits + Even Parity + 1 Stop Bits
(1)       0 : =1C                WSB_8O1_gc:     equ     %00011100 ; 8 bits + Odd Parity  + 1 Stop Bits
(1)       0 :                            ;; Transmit Control Bits
(1)       0 : =60                TCB_gm:         equ     %01100000 ; Group mask
(1)       0 : =0                 TCB_DI_gc:      equ     %00000000 ; RTS=Low,  Tx Interrupt Disabled
(1)       0 : =20                TCB_EI_gc:      equ     %00100000 ; RTS=Low,  Tx Interrupt Enabled
(1)       0 : =40                TCB_RTS_gc:     equ     %01000000 ; RTS=High, Tx Interrupt Disabled
(1)       0 : =60                TCB_BREAK_gc:   equ     %01100000 ; RTS=Low,  Tx Interrupt Disabled
(1)       0 :                                                      ; Transmit Break Level
(1)       0 : =80                RIEB_bm:        equ     %10000000 ; Receive Interrupt Enable Bit mask
(1)       0 :
(1)       0 :                    ;;; Status register
(1)       0 : =17F8              ACIA_status:    equ     ACIA+0
(1)       0 : =1                 RDRF_bm:        equ     %00000001 ; Receive Data Register Full
(1)       0 : =2                 TDRE_bm:        equ     %00000010 ; Transmit Data Register Empty
(1)       0 : =4                 DCDF_bm:        equ     %00000100 ; Data Carrier Detect Flag
(1)       0 : =8                 CTSF_bm:        equ     %00001000 ; Clear To Send Flag
(1)       0 : =10                FERR_bm:        equ     %00010000 ; Frame Error Flag
(1)       0 : =20                OVRN_bm:        equ     %00100000 ; Receiver Overrun Flag
(1)       0 : =40                PERR_bm:        equ     %01000000 ; Parity Error Flag
(1)       0 : =80                IRQF_bm:        equ     %10000000 ; Interrupt Request Flag
(1)       0 :
(1)       0 :                    ;;; Data register
(1)       0 : =17F9              ACIA_data:      equ     ACIA+1          ; Data register
          0 :
         40 :                            org     $40
         40 :                    cputype:
         40 :                            rmb     1
         41 :                    save_a: rmb     1
         42 :
       1FFC :                            org     VEC_SWI
       1FFC : 1F FC                      fdb     VEC_SWI         ; for halt to system
       1FFE :                            org     VEC_RESET
       1FFE : 10 00                      fdb     initialize
       2000 :
       1000 :                            org     $1000
       1000 :                    initialize:
       1000 :                            include "cputype.inc"
(1)    1000 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)    1000 : 9C                         rsp                     ; 6805:SP=$7F. 68HC05:SP=$FF
(1)    1001 : 3F 40                      clr     cputype
(1)    1003 : 3F 7E                      clr     $7E             ; clear return address of 6805
(1)    1005 : 3F FE                      clr     $FE             ; clear return address of 68HC05
(1)    1007 : AD 32                      bsr     check_cpu
(1)    1009 : 20 37                      bra     continue
(1)    100B :                    store_ACIA_control:
(1)    100B : 3D 40                      tst     cputype
(1)    100D : 26 04                      bne     *+6
(1)    100F : C7 17 F8                   sta     ACIA_control
(1)    1012 : 81                         rts
(1)    1013 : C7 FF E0                   sta     $FFE0
(1)    1016 : 81                         rts
(1)    1017 :                    load_ACIA_status:
(1)    1017 : 3D 40                      tst     cputype
(1)    1019 : 26 04                      bne     *+6
(1)    101B : C6 17 F8                   lda     ACIA_status
(1)    101E : 81                         rts
(1)    101F : C6 FF E0                   lda     $FFE0
(1)    1022 : 81                         rts
(1)    1023 :                    load_ACIA_data:
(1)    1023 : 3D 40                      tst     cputype
(1)    1025 : 26 04                      bne     *+6
(1)    1027 : C6 17 F9                   lda     ACIA_data
(1)    102A : 81                         rts
(1)    102B : C6 FF E1                   lda     $FFE1
(1)    102E : 81                         rts
(1)    102F :                    store_ACIA_data:
(1)    102F : 3D 40                      tst     cputype
(1)    1031 : 26 04                      bne     *+6
(1)    1033 : C7 17 F9                   sta     ACIA_data
(1)    1036 : 81                         rts
(1)    1037 : C7 FF E1                   sta     $FFE1
(1)    103A : 81                         rts
(1)    103B :                    check_cpu:
(1)    103B : 3D 7E                      tst     $7E
(1)    103D : 26 02                      bne     cpu6805         ; found return address at 6805 stack
(1)    103F : 3C 40                      inc     cputype         ; 0:6805, 1:68HC05
(1)    1041 :                    cpu6805:
(1)    1041 : 81                         rts
(1)    1042 :                    continue:
       1042 : A6 03                      lda     #CDS_RESET_gc   ; Master reset
       1044 : AD C5                      bsr     store_ACIA_control
       1046 : A6 14                      lda     #WSB_8N1_gc     ; 8 bits + No Parity + 1 Stop Bits
       1048 :                                                    ; Transmit, Receive interrupts disabled
       1048 : AD C1                      bsr     store_ACIA_control
       104A :
       104A : AD 0E              loop:   bsr     getchar
       104C : 4D                         tsta
       104D : 27 0A                      beq     halt_to_system
       104F : AD 14              echo:   bsr     putchar
       1051 : A1 0D                      cmp     #$0D            ; Carriage Return
       1053 : 26 F5                      bne     loop
       1055 : A6 0A                      lda     #$0A            ; Newline
       1057 : 20 F6                      bra     echo
       1059 :                    halt_to_system:
       1059 : 83                         swi                     ; halt to system
       105A :
       105A :                    getchar:
       105A : CD 10 17                   jsr     load_ACIA_status
       105D : A5 01                      bit     #RDRF_bm
       105F : 27 F9                      beq     getchar
       1061 : CD 10 23                   jsr     load_ACIA_data
       1064 : 81                         rts
       1065 :
       1065 :                    putchar:
       1065 : B7 41                      sta     save_a
       1067 :                    putchar_loop:
       1067 : CD 10 17                   jsr     load_ACIA_status
       106A : A5 02                      bit     #TDRE_bm
       106C : 27 F9                      beq     putchar_loop
       106E : B6 41                      lda     save_a
       1070 : CD 10 2F                   jsr     store_ACIA_data
       1073 : 81                         rts
       1074 :
       1074 :                    ;;; MC68HC05 compatibility
       FFFC :                            org     $FFFC
       FFFC : FF FC                      fdb     $FFFC           ; SWI: halt to system
       FFFE : 10 00                      fdb     initialize      ; RESET
