          0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
          0 :                            cpu     8085
          0 :                            include "i8085.inc"
(1)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :                            include "i8080.inc"
(2)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(2)       0 :                    ;;; i8080
(2)       0 :                    ;;; FLAGS Register
(2)       0 : =80                F_SIGN:         equ     10000000B ; set to 1 if negative
(2)       0 : =40                F_ZERO:         equ     01000000B ; set to 1 if zero
(2)       0 : =10                F_HALF_CARRY:   equ     00010000B ; set to 1 if carry from bit-3
(2)       0 : =4                 F_PARITY:       equ     00000100B ; set to 1 if even parity
(2)       0 : =1                 F_CARRY:        equ     00000001B ; set to 1 if carry
(2)       0 :                    ;;; Interrupt origin
(2)       0 : =0                 ORG_RESET:      equ     0000H   ; RESET
(2)       0 : =0                 ORG_RST0:       equ     0000H   ; RST 0
(2)       0 : =8                 ORG_RST1:       equ     0008H   ; RST 1
(2)       0 : =10                ORG_RST2:       equ     0010H   ; RST 2
(2)       0 : =18                ORG_RST3:       equ     0018H   ; RST 3
(2)       0 : =20                ORG_RST4:       equ     0020H   ; RST 4
(2)       0 : =28                ORG_RST5:       equ     0028H   ; RST 5
(2)       0 : =30                ORG_RST6:       equ     0030H   ; RST 6
(2)       0 : =38                ORG_RST7:       equ     0038H   ; RST 3
(1)       0 :                    ;;; i8085
(1)       0 :                    ;;; Set Innterrupt Maske
(1)       0 : =80                SIM_SOD:        equ     10000000B ; Serial Output Data
(1)       0 : =40                SIM_SDE:        equ     01000000B ; Serial Data Enable
(1)       0 : =10                SIM_R75:        equ     00010000B ; Reset RST 7.5 latch
(1)       0 : =8                 SIM_MSE:        equ     00001000B ; Mask Set Enable
(1)       0 : =4                 SIM_M75:        equ     00000100B ; RST 7.5 Mask
(1)       0 : =2                 SIM_M65:        equ     00000010B ; RST 6.5 Mask
(1)       0 : =1                 SIM_M55:        equ     00000001B ; RST 5.5 Mask
(1)       0 :                    ;;; Read Interrupt Mask
(1)       0 : =80                RIM_SID:        equ     10000000B ; Serial Input Data
(1)       0 : =40                RIM_I75:        equ     01000000B ; RST 7.5 Pending
(1)       0 : =20                RIM_I65:        equ     00100000B ; RST 6.5 Pending
(1)       0 : =10                RIM_I55:        equ     00010000B ; RST 5.5 Pending
(1)       0 : =8                 RIM_IE:         equ     00001000B ; Interrupt Enable
(1)       0 : =4                 RIM_M75:        equ     SIM_M75
(1)       0 : =2                 RIM_M65:        equ     SIM_M65
(1)       0 : =1                 RIM_M55:        equ     SIM_M55
(1)       0 :                    ;;; Interrupt origin
(1)       0 : =24                ORG_TRAP:       equ     0024H   ; TRAP
(1)       0 : =2C                ORG_RST55:      equ     002CH   ; RST 5.5
(1)       0 : =34                ORG_RST65:      equ     0034H   ; RST 6.5
(1)       0 : =3C                ORG_RST75:      equ     003CH   ; RST 7.5
          0 :
       1000 :                            org     1000H
       1000 : =1000              stack:  equ     $
       1000 :
          0 :                            org     ORG_RESET
          0 : C3 00 01                   jmp     init
          3 :
        100 :                            org     0100H
        100 :                    init:   
        100 : 31 00 10                   lxi     sp, stack
        103 : 3E C0                      mvi     a, SIM_SOD OR SIM_SDE
        105 : 30                         sim                     ; set mark
        106 :
        106 :                    echo:
        106 : CD 1E 01                   call    getch
        109 : B7                         ora     a
        10A : CA 1D 01                   jz      halt_to_system
        10D :                    echo_back:
        10D : CD 52 01                   call    putch
        110 : FE 0D                      cpi     0DH
        112 : C2 06 01                   jnz     echo
        115 : 3E 0A                      mvi     a,0AH
        117 : CD 52 01                   call    putch
        11A : C3 06 01                   jmp     echo
        11D :                    halt_to_system:
        11D : 76                         hlt
        11E :
        11E :                    ;;; Assume that 8085 is running with 3MHz CLK.
        11E :                    ;;; 9,600bps bit duration = 3,000,000/9,600 = 312.5 CLK
        11E :
        11E :                    ;;; SID is latched at T3/CLK=0 of RIM instruction
        11E : C5                 getch:  push    b               ;12
        11F : D5                         push    d               ;12
        120 : 20                 get1:   rim                     ;4
        121 : E6 80                      ani     RIM_SID         ;7
        123 : CA 20 01                   jz      get1            ;7/10
        126 : 20                 get2:   rim                     ;4,4
        127 : E6 80                      ani     RIM_SID         ;7,11
        129 : C2 26 01                   jnz     get2            ;7/10,18 wait start bit
        12C :                    ;;; 470 = 312.5*1.504
        12C : 16 1D                      mvi     d,29            ;7,25
        12E : CD 8A 01                   call    delay           ;29*14+25,456
        131 : 0E 08                      mvi     c,8             ;7,463
        133 : 1E 00                      mvi     e,0             ;7,470
        135 :                    ;;;
        135 : 20                 get3:   rim                     ;4,4
        136 : E6 80                      ani     RIM_SID         ;7,11
        138 : 47                         mov     b,a             ;4,15
        139 : 7B                         mov     a,e             ;4,19
        13A : 0F                         rrc                     ;4,23
        13B : B0                         ora     b               ;4,27
        13C : 5F                         mov     e,a             ;4,31
        13D : 16 10                      mvi     d,16            ;7,38
        13F : CD 8A 01                   call    delay           ;16*14+25,287
        142 : 00                         nop                     ;4,291
        143 : 00                         nop                     ;4,295
        144 : 00                         nop                     ;4,299
        145 : 0D                         dcr     c               ;4,303
        146 : C2 35 01                   jnz     get3            ;7/10,313,310
        149 :                    ;;; 706 = 312.5*2.259
        149 : 16 1A                      mvi     d,26            ;7,317
        14B : CD 8A 01                   call    delay           ;26*14+25,706
        14E : 7B                         mov     a,e             ;4
        14F : D1                         pop     d               ;10
        150 : C1                         pop     b               ;10
        151 : C9                         ret                     ;10
        152 :
        152 :                    ;;; SOD is set at T2/CLK=0 of SIM instruciton
        152 : F5                 putch:  push    psw             ;12
        153 : C5                         push    b               ;12
        154 : D5                         push    d               ;12
        155 : 47                         mov     b,a             ;4
        156 : 3E C0                      mvi     a,SIM_SOD OR SIM_SDE ;7
        158 : 30                         sim                     ;4 set mark
        159 : 0E 08                      mvi     c,8             ;7
        15B :                    ;;; 4+7+17*14+25+4*6+7*2 = 312
        15B : 3E 40                      mvi     a,SIM_SDE       ;7 start bit
        15D : 30                         sim                     ;4,4
        15E : 16 11                      mvi     d,17            ;7,11
        160 : CD 8A 01                   call    delay           ;17*14+25,274
        163 :                    ;;; 4*8+7*3+10+16*14+25 = 312
        163 : 78                 put1:   mov     a,b             ;4,278
        164 : 0F                         rrc                     ;4.282
        165 : 47                         mov     b,a             ;4,286
        166 : E6 80                      ani     80H             ;7,293 data bit
        168 : F6 40                      ori     SIM_SDE         ;7,300
        16A : 00                         nop                     ;4,304
        16B : 00                         nop                     ;4,308
        16C : 00                         nop                     ;4,312
        16D : 30                         sim                     ;4,4
        16E : 16 10                      mvi     d,16            ;7,11
        170 : CD 8A 01                   call    delay           ;16*14+25,260
        173 : 0D                         dcr     c               ;4,264
        174 : C2 63 01                   jnz     put1            ;7/10,274,271
        177 :                    ;;; 4*2+7*2+16*14+25+10*2+4+7
        177 : C3 7A 01                   jmp     $+3             ;10,281
        17A : C3 7D 01                   jmp     $+3             ;10,291
        17D : 00                         nop                     ;4,295
        17E : 3E C0                      mvi     a,SIM_SOD OR SIM_SDE ;7,302 stop bit
        180 :                    ;;;
        180 : 30                         sim                     ;4,306
        181 : 16 13                      mvi     d,19            ;7,313
        183 : CD 8A 01                   call    delay           ;19*14+25,604
        186 :                    ;;;
        186 : D1                         pop     d               ;10
        187 : C1                         pop     b               ;10
        188 : F1                         pop     psw             ;10
        189 : C9                         ret                     ;10
        18A :
        18A :                    ;;; delay D*14+25 (18+D*14-3+10)
        18A :                    ;;;     call    delay           ;18
        18A : 15                 delay:  dcr     d               ;4
        18B : C2 8A 01                   jnz     delay           ;7/10
        18E : C9                         ret                     ;10
