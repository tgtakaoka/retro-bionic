          0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
          0 :                            cpu     tms7000
          0 :                            include "tms7000.inc"
(1)       0 :                            *** -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :                            *** TMS7000
(1)       0 :                            *** Status Register
(1)       0 : =80                ST_CARRY:       equ  ?10000000  set to 1 if carry occurred
(1)       0 : =40                ST_NEGATIVE:    equ  ?01000000  set to 1 if result is negative
(1)       0 : =20                ST_ZERO:        equ  ?00100000  set to 1 if result is zero
(1)       0 : =10                ST_INT:         equ  ?00010000  if 1, interrupt is enabled
(1)       0 :                            *** Vector
(1)       0 : =FFF8              VEC_INT3:       equ     >FFF8   #INT3 interrupt
(1)       0 : =FFFC              VEC_INT1:       equ     >FFFC   #INT1 interrupt
(1)       0 : =FFFE              VEC_RESET:      equ     >FFFE   #RESET vector
(1)       0 :                            *** Trap Vector
(1)       0 : =FFFE              VEC_TRAP0:      equ     >FFFE
(1)       0 : =FFFC              VEC_TRAP1:      equ     >FFFC
(1)       0 : =FFFA              VEC_TRAP2:      equ     >FFFA
(1)       0 : =FFF8              VEC_TRAP3:      equ     >FFF8
(1)       0 : =FFF6              VEC_TRAP4:      equ     >FFF6
(1)       0 : =FFF4              VEC_TRAP5:      equ     >FFF4
(1)       0 : =FFF2              VEC_TRAP6:      equ     >FFF2
(1)       0 : =FFF0              VEC_TRAP7:      equ     >FFF0
(1)       0 : =FFEE              VEC_TRAP8:      equ     >FFEE
(1)       0 : =FFEC              VEC_TRAP9:      equ     >FFEC
(1)       0 : =FFEA              VEC_TRAP10:     equ     >FFEA
(1)       0 : =FFE8              VEC_TRAP11:     equ     >FFE8
(1)       0 : =FFE6              VEC_TRAP12:     equ     >FFE6
(1)       0 : =FFE4              VEC_TRAP13:     equ     >FFE4
(1)       0 : =FFE2              VEC_TRAP14:     equ     >FFE2
(1)       0 : =FFE0              VEC_TRAP15:     equ     >FFE0
(1)       0 : =FFDE              VEC_TRAP16:     equ     >FFDE
(1)       0 : =FFDC              VEC_TRAP17:     equ     >FFDC
(1)       0 : =FFDA              VEC_TRAP18:     equ     >FFDA
(1)       0 : =FFD8              VEC_TRAP19:     equ     >FFD8
(1)       0 : =FFD6              VEC_TRAP20:     equ     >FFD6
(1)       0 : =FFD4              VEC_TRAP21:     equ     >FFD4
(1)       0 : =FFD2              VEC_TRAP22:     equ     >FFD2
(1)       0 : =FFD0              VEC_TRAP23:     equ     >FFD0
(1)       0 :                            *** Internal Peripherals
(1)       0 : =100               IOCNT0: equ     >0100   I/O Control register
(1)       0 : =C0                MEMMODE_gm:     equ     ?11000000       Memory mode
(1)       0 :                            * 0=Single Chip, 1=Peripheral Expansion, 2=Full Expansion
(1)       0 : =20                INT3_F: equ     ?00100000       #INT3 flag
(1)       0 : =10                INT3_E: equ     ?00010000       #INT3 enable
(1)       0 : =2                 INT1_F: equ     ?00000010       #INT1 flag
(1)       0 : =1                 INT1_E: equ     ?00000001       #INT1 enable
(1)       0 :                            *** I/O Ports
(1)       0 : =104               APORT:  equ     >0104   Port A data
(1)       0 : =106               BPORT:  equ     >0106   Port B data
(1)       0 : =108               CPORT:  equ     >0108   Port C data
(1)       0 : =109               CDDR:   equ     >0109   Port C data direction register
(1)       0 : =10A               DPORT:  equ     >010A   Port D data
(1)       0 : =10B               DDDR:   equ     >010B   Port D data direction register
          0 :
          0 :                            *** MC6850 Asynchronous Communication Interface Adapter
          0 : =1F0               ACIA:   equ     >01F0
          0 :                            include "mc6850.inc"
(1)       0 :                    ;;; -*- mode: asm; mode: flyspell-prog; -*-
(1)       0 :                            *** MC6850
(1)       0 :                            *** Asynchronous Communication Interface Adapter
(1)       0 : =1F0               ACIA_control:   equ     ACIA+0
(1)       0 : =1F0               ACIA_status:    equ     ACIA+0
(1)       0 : =1F1               ACIA_data:      equ     ACIA+1
(1)       0 :                            **  Counter Divider Select Bits
(1)       0 : =3                 CDS_gm:         equ     ?11             Group mask
(1)       0 : =0                 CDS_DIV1_gc:    equ     ?00000000       /1
(1)       0 : =0                 CDS_DIV16_gc:   equ     ?00000001       /16
(1)       0 : =0                 CDS_DIV64_gc:   equ     ?00000010       /64
(1)       0 : =3                 CDS_RESET_gc:   equ     ?00000011       Master Reset
(1)       0 :                            **  Word Select Bits
(1)       0 : =1C                WSB_gm:         equ     ?00011100       Group mask
(1)       0 : =0                 WSB_7E2_gc:     equ     ?00000000       7 Bits + Even Parity + 2 Stop Bits
(1)       0 : =4                 WSB_7O2_gc:     equ     ?00000100       7 bits + Odd Parity  + 2 Stop Bits
(1)       0 : =8                 WSB_7E1_gc:     equ     ?00001000       7 bits + Even Parity + 1 Stop Bits
(1)       0 : =C                 WSB_7O1_gc:     equ     ?00001100       7 bits + Odd Parity  + 1 Stop Bits
(1)       0 : =10                WSB_8N2_gc:     equ     ?00010000       8 bits + No Parity   + 2 Stop Bits
(1)       0 : =14                WSB_8N1_gc:     equ     ?00010100       8 bits + No Parity   + 1 Stop Bits
(1)       0 : =18                WSB_8E1_gc:     equ     ?00011000       8 bits + Even Parity + 1 Stop Bits
(1)       0 : =1C                WSB_8O1_gc:     equ     ?00011100       8 bits + Odd Parity  + 1 Stop Bits
(1)       0 :                            **  Transmit Control Bits
(1)       0 : =60                TCB_gm:         equ     ?01100000       Group mask
(1)       0 : =0                 TCB_DI_gc:      equ     ?00000000       RTS=Low,  Tx Interrupt Disabled
(1)       0 : =20                TCB_EI_gc:      equ     ?00100000       RTS=Low,  Tx Interrupt Enabled
(1)       0 : =40                TCB_RTS_gc:     equ     ?01000000       RTS=High, Tx Interrupt Disabled
(1)       0 : =60                TCB_BREAK_gc:   equ     ?01100000       RTS=Low,  Tx Interrupt Disabled
(1)       0 :                            *                               Transmit Break Level
(1)       0 : =80                RIEB_bm:        equ     ?10000000       Receive Interrupt Enable Bit mask
(1)       0 :                            *** Status register
(1)       0 : =1                 RDRF_bm:        equ     ?00000001       Receive Data Register Full
(1)       0 : =2                 TDRE_bm:        equ     ?00000010       Transmit Data Register Empty
(1)       0 : =4                 DCDF_bm:        equ     ?00000100       Data Carrier Detect Flag
(1)       0 : =8                 CTSF_bm:        equ     ?00001000       Clear To Send Flag
(1)       0 : =10                FERR_bm:        equ     ?00010000       Frame Error Flag
(1)       0 : =20                OVRN_bm:        equ     ?00100000       Receiver Overrun Flag
(1)       0 : =40                PERR_bm:        equ     ?01000000       Parity Error Flag
(1)       0 : =80                IRQF_bm:        equ     ?10000000       Interrupt Request Flag
          0 :
       FFFE :                            org     VEC_RESET
       FFFE : 10 00                      data    initialize
      10000 :
       1000 :                            org     >1000
       1000 :                    initialize:
       1000 : A2 03 F0                   movp    %CDS_RESET_gc, ACIA_control     Master reset
       1003 : A2 14 F0                   movp    %WSB_8N1_gc, ACIA_control       8 bits + No Parity + 1 Stop Bits
       1006 :                            *                                       Transmit, Receive interrupts disabled
       1006 : 8E 10 18           loop:   call    @getchar
       1009 : B0                         tsta
       100A : E2 0B                      jeq     halt_to_system
       100C : 8E 10 1F           echo:   call    @putchar
       100F : 2D 0D                      cmp     %>0D, A
       1011 : E6 F3                      jne     loop
       1013 : 22 0A                      mov     %>0A, A
       1015 : E0 F5                      jmp     echo
       1017 :                    halt_to_system:
       1017 : 01                         idle
       1018 :
       1018 :                    getchar:
       1018 : A7 01 F0 FC                btjzp   %RDRF_bm, ACIA_status, getchar
       101C : 80 F1                      movp    ACIA_data, A
       101E : 0A                         rets
       101F :
       101F :                    putchar:
       101F : A7 02 F0 FC                btjzp   %TDRE_bm, ACIA_status, putchar
       1023 : 82 F1                      movp    A, ACIA_data
       1025 : 0A                         rets
       1026 :
       1026 :                            *** Local Variables:
       1026 :                            *** mode: asm
       1026 :                            *** mode: flyspell-prog
       1026 :                            *** comment-start: "*"
       1026 :                            *** End:
